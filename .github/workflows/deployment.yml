name: Deploy to VPS

on:
  push:
    branches:
      - main
      - uat

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout du code
        uses: actions/checkout@v4

      - name: üîê Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üì° Ajout de l‚Äôh√¥te VPS √† known_hosts
        run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: üöÄ D√©ploiement distant via SSH
        env:
          BRANCH: ${{ github.ref_name }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          if [ "$BRANCH" = "main" ]; then
            PROJECT_DIR="teleese-api"
            ENV_CONTENT="PORT=${{ secrets.PORT }}
            LOG_LEVEL=info
            PREFIX_PATH=${{ secrets.PREFIX_PATH }}
            NODE_ENV=production
            BASE_URL=${{ secrets.BASE_URL }}
            MONGO_URI=${{ secrets.MONGO_URI }}
            MONGO_DATABASE=${{ secrets.MONGO_DATABASE }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            MAIL_HOST=${{ secrets.MAIL_HOST }}
            MAIL_PORT=${{ secrets.MAIL_PORT }}
            MAIL_SECURE=${{ secrets.MAIL_SECURE }}
            MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
            MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            MAIL_SENDER_NAME=${{ secrets.MAIL_SENDER_NAME }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}"
            COMPOSE_FILE="docker-compose.yml"
          elif [ "$BRANCH" = "uat" ]; then
            PROJECT_DIR="teleese-api-uat"
            ENV_CONTENT="PORT=${{ secrets.UAT_PORT }}
            LOG_LEVEL=info
            PREFIX_PATH=${{ secrets.PREFIX_PATH }}
            NODE_ENV=uat
            BASE_URL=${{ secrets.UAT_BASE_URL }}
            MONGO_URI=${{ secrets.UAT_MONGO_URI }}
            MONGO_DATABASE=${{ secrets.UAT_MONGO_DATABASE }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            MAIL_HOST=${{ secrets.MAIL_HOST }}
            MAIL_PORT=${{ secrets.MAIL_PORT }}
            MAIL_SECURE=${{ secrets.MAIL_SECURE }}
            MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
            MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            MAIL_SENDER_NAME=${{ secrets.MAIL_SENDER_NAME }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}"
            COMPOSE_FILE="docker-compose.uat.yml"
          else
            echo "‚ùå Branche $BRANCH non pr√©vue pour le d√©ploiement"
            exit 1
          fi

          echo "üóÇÔ∏è Projet : $PROJECT_DIR"
          echo "üìÑ Fichier compose : $COMPOSE_FILE"

          ssh $VPS_USER@$VPS_HOST << EOF
            set -e
            cd $PROJECT_DIR

            echo "üß™ √âcriture dynamique du fichier .env"
            echo "$ENV_CONTENT" > .env

            echo "üì• Pull du dernier code"
            git pull origin $BRANCH

            echo "üê≥ D√©ploiement avec Docker Compose"
            docker-compose -f $COMPOSE_FILE up -d --build

            echo "üìÑ Logs r√©cents (100 lignes) :"
            docker-compose logs --tail=100
          EOF
